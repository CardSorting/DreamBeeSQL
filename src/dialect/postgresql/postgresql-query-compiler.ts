import { DefaultQueryCompiler } from '../../query-compiler/default-query-compiler.js'
import { ValueNode } from '../../operation-node/value-node.js'

const ID_WRAP_REGEX = /"/g

export class PostgresQueryCompiler extends DefaultQueryCompiler {
  #numParameters = 0

  protected override getCurrentParameterPlaceholder(): string {
    return '$' + ++this.#numParameters
  }

  protected override getLeftIdentifierWrapper(): string {
    return '"'
  }

  protected override getRightIdentifierWrapper(): string {
    return '"'
  }

  protected override getAutoIncrement(): string {
    // PostgreSQL uses SERIAL or GENERATED AS IDENTITY
    return 'generated by default as identity'
  }

  protected override sanitizeIdentifier(identifier: string): string {
    return identifier.replace(ID_WRAP_REGEX, '""')
  }

  protected override visitValue(node: ValueNode): void {
    if (node.value === null) {
      this.append('null')
    } else if (node.value === undefined) {
      this.append('null')
    } else if (typeof node.value === 'boolean') {
      this.append(node.value ? 'true' : 'false')
    } else {
      super.visitValue(node)
    }
  }
}

